{"version":3,"sources":["components/CharacterCard.tsx","components/CharacterCardGrid.tsx","assets/home-background.png","components/BorderLineProgress.tsx","hooks/useFetch.ts","components/CharacterDetailsModal.tsx","components/Home.tsx","hooks/useDebouncedSearchText.ts","components/CharacterDetails.tsx","components/App.tsx","reportWebVitals.ts","theme/GlobalTheme.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","backgroundColor","backdropFilter","boxShadow","borderRadius","margin","padding","image","objectFit","width","flexGrow","breakpoints","down","cardContent","name","fontWeight","nickname","innerContainer","overlayedText","occupationContainer","occupationText","occupationChip","borderWidth","marginLeft","marginTop","moreDetailsButton","textTransform","CharacterCard","character","showModal","styles","Card","className","CardMedia","img","title","CardContent","Typography","variant","gutterBottom","birthday","status","occupation","map","val","idx","Chip","label","CardActions","Button","size","onClick","CharacterCardGrid","characters","char_id","BorderLinearProgress","withStyles","bar","LinearProgress","useFetch","url","useState","data","setData","loading","setLoading","useEffect","fetch","then","res","text","JSON","parse","catch","err","modal","minWidth","alignItems","justifyContent","quotes","maxHeight","overflowY","overlayed","MoreDetailsModal","setShowModal","replace","quotesRender","length","List","quote","ListItem","ListItemText","primary","quote_id","Modal","aria-labelledby","aria-describedby","open","onClose","portrayed","appearance","join","spacing","minHeight","background","BackgroundImage","backgroundSize","appBar","height","search","position","shape","fade","palette","common","white","up","searchIcon","pointerEvents","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","pagination","alignSelf","Home","page","setPage","totalPage","setTotalPage","modalCharacter","setModalCharacter","paginationOffset","initValue","debounceTime","setText","debouncedText","setDebouncedText","setDebouncedTextCallback","useCallback","debounce","nextValue","setTextDebounced","useDebouncedText","searchText","debouncedSearchText","setSearchText","AppBar","InputBase","placeholder","value","onChange","event","target","classes","input","fullWidth","inputProps","Pagination","count","e","currentPage","boundaryCount","siblingCount","CharacterDetails","App","basename","process","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","type","blue","typography","fontFamily","values","xs","sm","md","lg","xl","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.467542d3.chunk.js","sourcesContent":["import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Chip,\n  Theme,\n  Typography\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport React from \"react\";\nimport { Character } from \"../types/api\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    backgroundColor: \"rgba(255, 255, 255, 0.06)\",\n    backdropFilter: \"blur(20px)\",\n    boxShadow: \"20px 20px 22px rgba(0,0,0,0.2)\",\n    borderRadius: 8,\n    margin: 24,\n    padding: 0\n  },\n  image: {\n    objectFit: \"cover\",\n    width: 200,\n    flexGrow: 1,\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none\"\n    }\n  },\n  cardContent: {\n    flexGrow: 5,\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"auth\"\n  },\n  name: {\n    fontWeight: 900\n  },\n  nickname: {\n    fontWeight: 400\n  },\n  innerContainer: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  overlayedText: {\n    boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\",\n    padding: 6,\n    margin: 8,\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n    borderRadius: 8\n  },\n  occupationContainer: {\n    margin: 8,\n    padding: 12,\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n    borderRadius: 8\n  },\n  occupationText: {\n    fontWeight: 600\n  },\n  occupationChip: {\n    borderWidth: 2,\n    marginLeft: 4,\n    marginTop: 6\n  },\n  moreDetailsButton: {\n    textTransform: \"none\"\n  }\n}));\n\ninterface Props {\n  character: Character;\n  showModal: (character: Character) => void;\n}\n\nexport default function CharacterCard({ character, showModal }: Props) {\n  const styles = useStyles();\n\n  return (\n    <Card className={styles.root}>\n      <CardMedia\n        className={styles.image}\n        image={character.img}\n        title={character.name}\n      />\n      <CardContent className={styles.cardContent}>\n        <Typography className={styles.name} variant=\"h4\">\n          {character.name}\n        </Typography>\n        <Typography className={styles.nickname} gutterBottom variant=\"h5\">\n          {character.nickname}\n        </Typography>\n\n        <div className={styles.innerContainer}>\n          <Typography className={styles.overlayedText} variant=\"subtitle1\">\n            🎂 {character.birthday}\n          </Typography>\n          <Typography className={styles.overlayedText} variant=\"subtitle1\">\n            ⏳ {character.status}\n          </Typography>\n        </div>\n\n        <div className={styles.occupationContainer}>\n          <Typography\n            className={styles.occupationText}\n            gutterBottom\n            variant=\"subtitle1\"\n          >\n            Occupation\n          </Typography>\n          {character.occupation.map((val, idx) => (\n            <Chip\n              key={idx}\n              className={styles.occupationChip}\n              label={val}\n              variant=\"outlined\"\n            />\n          ))}\n        </div>\n        <CardActions>\n          <Button\n            className={styles.moreDetailsButton}\n            variant=\"outlined\"\n            size=\"medium\"\n            onClick={() => showModal(character)}\n          >\n            More\n          </Button>\n        </CardActions>\n      </CardContent>\n    </Card>\n  );\n}\n","import { Theme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport React from \"react\";\nimport { Character } from \"../types/api\";\nimport CharacterCard from \"./CharacterCard\";\n\ninterface Props {\n  characters: Array<Character>;\n  showModal: (character: Character) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: \"100%\",\n    display: \"grid\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"inline\"\n    },\n    gridTemplateColumns: \"repeat(auto-fit, minmax(500px, 1fr))\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\"\n  }\n}));\n\nexport default function CharacterCardGrid({ characters, showModal }: Props) {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.root}>\n      {characters.map((character) => (\n        <CharacterCard\n          key={character.char_id}\n          character={character}\n          showModal={showModal}\n        />\n      ))}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/home-background.5d3e0589.png\";","import { withStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    borderRadius: 2\n  },\n  bar: {\n    borderRadius: 4,\n    backgroundColor: \"#ffffff\"\n  }\n}))(LinearProgress);\n\nexport default BorderLinearProgress;\n","import { useEffect, useState } from \"react\";\n\nexport default function useFetch<T>(url: string) {\n  const [data, setData] = useState<T | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(url)\n      .then((res) => res.text())\n      .then((res) => {\n        setLoading(false);\n        setData(JSON.parse(res) as T);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  }, [url]);\n\n  return { data, loading };\n}\n","import React, { useRef, useState } from \"react\";\nimport {\n  Modal,\n  Backdrop,\n  Fade,\n  makeStyles,\n  Card,\n  CardContent,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Button,\n  CardActions\n} from \"@material-ui/core\";\nimport { Character, Quote } from \"../types/api\";\nimport useFetch from \"../hooks/useFetch\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    minWidth: \"50vw\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  root: {\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n    backdropFilter: \"blur(40px)\",\n    boxShadow: \"20px 20px 22px rgba(0,0,0,0.2)\",\n    borderRadius: 8,\n    padding: 4\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  name: {\n    fontWeight: 900\n  },\n  quotes: {\n    maxHeight: \"30vh\",\n    overflowY: \"scroll\"\n  },\n  overlayed: {\n    boxShadow: \"0 2px 4px 0 rgba(0,0,0,0.2)\",\n    padding: 10,\n    margin: 8,\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n    borderRadius: 8\n  }\n}));\n\ninterface Props {\n  character: Character;\n  setShowModal: (newValue: boolean) => void;\n}\n\nexport default function MoreDetailsModal({ character, setShowModal }: Props) {\n  const styles = useStyles();\n  const { data: quotes, loading } = useFetch<Array<Quote>>(\n    `https://breakingbadapi.com/api/quote?author=${character.name.replace(\n      \" \",\n      \"+\"\n    )}`\n  );\n\n  let quotesRender = (\n    <Typography variant=\"subtitle1\">\n      {loading ? \"Loading Quotes...\" : \"No quotes available\"}\n    </Typography>\n  );\n\n  if (!loading && quotes !== null && quotes.length > 0) {\n    quotesRender = (\n      <>\n        <Typography variant=\"h6\">Quotes Written</Typography>\n        <List className={styles.quotes}>\n          {quotes.map((quote) => (\n            <ListItem key={quote.quote_id}>\n              <ListItemText primary={quote.quote} />\n            </ListItem>\n          ))}\n        </List>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      className={styles.modal}\n      open={true}\n      onClose={() => {\n        setShowModal(false);\n      }}\n    >\n      <Card className={styles.root}>\n        <CardContent className={styles.cardContent}>\n          <Typography className={styles.name} variant=\"h4\">\n            {character.name}\n          </Typography>\n          <Typography className={styles.overlayed} variant=\"subtitle1\">\n            Portrayed by <b>{character.portrayed}</b>\n          </Typography>\n          <Typography className={styles.overlayed} variant=\"subtitle1\">\n            Appears in <b>{character.appearance.join(\", \")} seasons</b>\n          </Typography>\n          {quotesRender}\n        </CardContent>\n        <CardActions>\n          <Button variant=\"contained\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </CardActions>\n      </Card>\n    </Modal>\n  );\n}\n","import React, { ChangeEvent, useState } from \"react\";\nimport { AppBar, InputBase, Theme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { fade } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport useDebouncedText from \"../hooks/useDebouncedSearchText\";\nimport CharacterCardGrid from \"./CharacterCardGrid\";\n\nimport BackgroundImage from \"../assets/home-background.png\";\nimport BorderLinearProgress from \"./BorderLineProgress\";\nimport { Character } from \"../types/api\";\nimport { Pagination } from \"@material-ui/lab\";\nimport useFetch from \"../hooks/useFetch\";\nimport CharacterDetailsModal from \"./CharacterDetailsModal\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    display: \"flex\",\n    minHeight: \"90vh\",\n    flexDirection: \"column\",\n    background: `url(${BackgroundImage}) no-repeat center center fixed`,\n    backgroundSize: \"cover\"\n  },\n  appBar: {\n    height: theme.spacing(10)\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    margin: theme.spacing(2),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\"\n    }\n  },\n  pagination: {\n    alignSelf: \"center\",\n    margin: theme.spacing(2)\n  }\n}));\n\nconst ITEMS_PER_PAGE = 10;\n\nexport default function Home() {\n  const styles = useStyles();\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(10);\n  const [modalCharacter, setModalCharacter] = useState<Character | null>(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const paginationOffset = ITEMS_PER_PAGE * (page - 1);\n\n  const {\n    text: searchText,\n    debouncedText: debouncedSearchText,\n    setTextDebounced: setSearchText\n  } = useDebouncedText(\"\", 400);\n\n  const { data: characters, loading } = useFetch<Array<Character>>(\n    `https://breakingbadapi.com/api/characters?` +\n      [\n        `limit=${ITEMS_PER_PAGE}`,\n        `offset=${paginationOffset}`,\n        `name=${debouncedSearchText.replace(\" \", \"+\")}`\n      ].join(\"&\")\n  );\n\n  const handleSearchTextChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setPage(1);\n    if (event.target.value.length === 0) {\n      setTotalPage(11);\n    } else {\n      setTotalPage(1);\n    }\n    setSearchText(event.target.value);\n  };\n\n  return (\n    <div className={styles.root}>\n      <AppBar className={styles.appBar}>\n        <div className={styles.search}>\n          <div className={styles.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            placeholder=\"Search by name…\"\n            value={searchText}\n            onChange={handleSearchTextChange}\n            classes={{\n              root: styles.inputRoot,\n              input: styles.inputInput\n            }}\n            fullWidth\n            inputProps={{ \"aria-label\": \"search\" }}\n          />\n        </div>\n        {loading && <BorderLinearProgress variant=\"indeterminate\" />}\n      </AppBar>\n\n      <div>\n        {characters && (\n          <CharacterCardGrid\n            characters={characters}\n            showModal={(character) => {\n              setModalCharacter(character);\n              setShowModal(true);\n            }}\n          />\n        )}\n      </div>\n\n      {showModal && modalCharacter && (\n        <CharacterDetailsModal\n          character={modalCharacter}\n          setShowModal={setShowModal}\n        />\n      )}\n\n      <Pagination\n        className={styles.pagination}\n        count={totalPage}\n        page={page}\n        onChange={(e, currentPage) => setPage(currentPage)}\n        boundaryCount={1}\n        siblingCount={0}\n      />\n    </div>\n  );\n}\n","import { useState, useCallback } from \"react\";\nimport { debounce } from \"lodash\";\n\nexport default function useDebouncedText(\n  initValue: string,\n  debounceTime: number\n) {\n  const [text, setText] = useState(initValue);\n  const [debouncedText, setDebouncedText] = useState(initValue);\n\n  const setDebouncedTextCallback = useCallback(\n    debounce((nextValue) => setDebouncedText(nextValue), debounceTime),\n    []\n  );\n\n  const setTextDebounced = (nextValue: string) => {\n    setText(nextValue);\n    setDebouncedTextCallback(nextValue);\n  };\n\n  return { text, debouncedText, setTextDebounced };\n}\n","import React from \"react\";\n\nexport default function CharacterDetails() {\n  return <>Character Details Page</>;\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport CharacterDetails from \"./CharacterDetails\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/character/:charId\">\n          <CharacterDetails />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: blue\n  },\n  typography: {\n    fontFamily: ['\"Montserrat\"'].join(\",\")\n  },\n  breakpoints: {\n    values: {\n      xs: 576,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 1920\n    }\n  }\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme/GlobalTheme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}