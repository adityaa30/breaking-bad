[{"/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/index.tsx":"1","/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/reportWebVitals.ts":"2","/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/App.tsx":"3","/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/hooks/useDebouncedSearchText.ts":"4","/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/types/api.ts":"5","/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/hooks/useFetch.ts":"6","/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/components/CharacterCard.tsx":"7","/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/components/CharacterCardGrid.tsx":"8","/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/components/CharacterDetails.tsx":"9","/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/components/Home.tsx":"10","/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/theme/GlobalTheme.ts":"11","/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/components/BorderLineProgress.tsx":"12"},{"size":649,"mtime":1608711915743,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1608724881256,"results":"15","hashOfConfig":"14"},{"size":493,"mtime":1608711861089,"results":"16","hashOfConfig":"14"},{"size":596,"mtime":1608724881216,"results":"17","hashOfConfig":"14"},{"size":167,"mtime":1608655297287,"results":"18","hashOfConfig":"14"},{"size":492,"mtime":1608724676281,"results":"19","hashOfConfig":"14"},{"size":2793,"mtime":1608724880026,"results":"20","hashOfConfig":"14"},{"size":834,"mtime":1608724880043,"results":"21","hashOfConfig":"14"},{"size":113,"mtime":1608724880066,"results":"22","hashOfConfig":"14"},{"size":3522,"mtime":1608724880106,"results":"23","hashOfConfig":"14"},{"size":334,"mtime":1608724881276,"results":"24","hashOfConfig":"14"},{"size":362,"mtime":1608724879983,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"85jtqv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/index.tsx",[],["53","54"],"/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/reportWebVitals.ts",[],"/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/App.tsx",[],"/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/hooks/useDebouncedSearchText.ts",["55"],"import { useState, useCallback } from \"react\";\nimport { debounce } from \"lodash\";\n\nexport default function useDebouncedText(\n  initValue: string,\n  debounceTime: number\n) {\n  const [text, setText] = useState(initValue);\n  const [debouncedText, setDebouncedText] = useState(initValue);\n\n  const setDebouncedTextCallback = useCallback(\n    debounce((nextValue) => setDebouncedText(nextValue), debounceTime),\n    []\n  );\n\n  const setTextDebounced = (nextValue: string) => {\n    setText(nextValue);\n    setDebouncedTextCallback(nextValue);\n  };\n\n  return { text, debouncedText, setTextDebounced};\n}\n","/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/types/api.ts",[],"/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/hooks/useFetch.ts",[],"/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/components/CharacterCard.tsx",[],"/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/components/CharacterCardGrid.tsx",[],"/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/components/CharacterDetails.tsx",[],"/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/components/Home.tsx",["56"],"import React, { useState } from \"react\";\nimport { AppBar, InputBase, TextField, Theme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { fade } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport useDebouncedText from \"../hooks/useDebouncedSearchText\";\nimport CharacterCardGrid from \"./CharacterCardGrid\";\n\nimport BackgroundImage from \"../assets/home-background.png\";\nimport BorderLinearProgress from \"./BorderLineProgress\";\nimport { Character } from \"../types/api\";\nimport { Pagination } from \"@material-ui/lab\";\nimport useFetch from \"../hooks/useFetch\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    display: \"flex\",\n    flexDirection: \"column\",\n    background: `url(${BackgroundImage}) no-repeat center center fixed`,\n    backgroundSize: \"cover\"\n  },\n  appBar: {\n    height: theme.spacing(10)\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    margin: theme.spacing(2),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\"\n    }\n  },\n  pagination: {\n    alignSelf: \"center\",\n    margin: theme.spacing(2)\n  }\n}));\n\nconst ITEMS_PER_PAGE = 10;\n\nexport default function Home() {\n  const styles = useStyles();\n  const [page, setPage] = useState(1);\n  const paginationOffset = ITEMS_PER_PAGE * (page - 1);\n\n  const {\n    text: searchText,\n    debouncedText: debouncedSearchText,\n    setTextDebounced: setSearchText\n  } = useDebouncedText(\"\", 1000);\n\n  const { data: characters, loading } = useFetch<Array<Character>>(\n    `https://breakingbadapi.com/api/characters?` +\n      [\n        `limit=${ITEMS_PER_PAGE}`,\n        `offset=${paginationOffset}`,\n        `name=${debouncedSearchText.replace(\" \", \"+\")}`\n      ].join(\"&\")\n  );\n\n  return (\n    <div className={styles.root}>\n      <AppBar className={styles.appBar}>\n        <div className={styles.search}>\n          <div className={styles.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            placeholder=\"Search by nameâ€¦\"\n            value={searchText}\n            onChange={(event) => setSearchText(event.target.value)}\n            classes={{\n              root: styles.inputRoot,\n              input: styles.inputInput\n            }}\n            fullWidth\n            inputProps={{ \"aria-label\": \"search\" }}\n          />\n        </div>\n        {loading && <BorderLinearProgress variant=\"indeterminate\" value={50} />}\n      </AppBar>\n\n      {characters && <CharacterCardGrid characters={characters} />}\n\n      <Pagination\n        className={styles.pagination}\n        count={10}\n        onChange={(e, currentPage) => setPage(currentPage)}\n        boundaryCount={1}\n        siblingCount={0}\n      />\n    </div>\n  );\n}\n","/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/theme/GlobalTheme.ts",[],"/home/adityaa30/Documents/Projects/WebDev/breaking-bad/src/components/BorderLineProgress.tsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":11,"column":36,"nodeType":"63","endLine":11,"endColumn":47},{"ruleId":"64","severity":1,"message":"65","line":2,"column":29,"nodeType":"63","messageId":"66","endLine":2,"endColumn":38},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier","@typescript-eslint/no-unused-vars","'TextField' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation"]